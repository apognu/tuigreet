name: Release build

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Lint
        run: |
          cargo clippy
          cargo clippy --release

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Test
        run: |
          cargo test

  build:
    strategy:
      matrix:
        arch:
          - {
              name: "x86_64",
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
    runs-on: ${{ matrix.arch.os }}
    steps:
      - name: Get the version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: cargo-cache-${{ matrix.arch.target }}
      - run: rm -rf .git/
      - name: Build
        run: |
          cargo build --release --target=${{ matrix.arch.target }}
      - name: Rename artifact
        run: mv target/${{ matrix.arch.target }}/release/tuigreet target/${{ matrix.arch.target }}/release/tuigreet-${{ steps.version.outputs.VERSION }}-${{ matrix.arch.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tuigreet-${{ steps.version.outputs.VERSION }}-${{ matrix.arch.name }}
          path: target/${{ matrix.arch.target }}/release/tuigreet-${{ steps.version.outputs.VERSION }}-${{ matrix.arch.name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  assets:
    strategy:
      matrix:
        arch:
          - {
              name: "x86_64",
              os: "ubuntu-latest",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
            }
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Get the version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: target/out
      - name: Get Release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: target/out/tuigreet-${{ steps.version.outputs.VERSION }}-${{ matrix.arch.name }}/tuigreet-${{ steps.version.outputs.VERSION }}-${{ matrix.arch.name }}
          asset_name: tuigreet-${{ steps.version.outputs.VERSION }}-${{ matrix.arch.name }}
          asset_content_type: application/octet-stream
